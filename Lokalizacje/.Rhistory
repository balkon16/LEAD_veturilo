knitr::opts_chunk$set(echo = TRUE)
library(xml2)
?read_xml
plik <- read_xml('http://nextbike.net/maps/nextbike-official.xml?city=210&fbclid=IwAR2CWCoe-qO__oFX8y5WwFAqz0TYhd8GGizbDSiFb3rc_6vdVFGBue0yuXc')
plik
plik[[1]]
xml_text(plik)
plik[1]
plik[1]$node
plik_2 <- read_xml('http://nextbike.net/maps/nextbike-official.xml?city=210&fbclid=IwAR2CWCoe-qO__oFX8y5WwFAqz0TYhd8GGizbDSiFb3rc_6vdVFGBue0yuXc')
library(XML)
klas <- xmlParse('http://nextbike.net/maps/nextbike-official.xml?city=210&fbclid=IwAR2CWCoe-qO__oFX8y5WwFAqz0TYhd8GGizbDSiFb3rc_6vdVFGBue0yuXc')
xml_data <- xmlToList(klas)
xml_data
str(xml_data)
xml_data$country
str(xml_data$country)
xml_data$country$city
xml_data$country$city$place
xml_data$country$.attrs
xml_data$country$city$.attrs
xml_data$country$city$place$.attrs
xml_data$country$city$place$bike
lista <- xml_data$country$city
lista
lista$place
lista <- lista$place
lista
str(lista)
lista_miejsc <- xml_data$country$city
str(lista_miejsc)
library(purrr)
matrix(unlist(lista_miejsc)
)
detail <- map(lista_miejsc, function(x) {x$placa$.attr})
do.call(rbind.data.frame, lista_miejsc)
?lapply
lappy(lista_miejsc, function(x) {str(x)})
lapply(lista_miejsc, function(x){str(x)})
xml_data$country$city
xml_data$country$city$place$.attrs
xml_data$country$city$place
xml_data$country$city$place
devtools::install_github('ultinomics/xmltools')
library(xml2)
library(xmltools)
getwd()\
getwd()
system.file("./nextbike-official.xml")
doc <- read_xml("./nextbike-official.xml")
str(doc)
doc %>% xml_view_tree()
doc %>% xml_get_path()
nodeset <- doc %>%
xml2::xml_children()
nodeset
nodeset[1] %>% xml2::xml_structure()
class(nodeset[1])
nodeset[1] %>%
xml_view_trees()
terminal_parent <- doc %>% ## get all xpaths to parents of parent node
xml_get_paths(only_terminal_parent = TRUE)
terminal_parent
terminal_xpathx <- "/markers/country/city/place"
nodeset
df0 <- lapply(terminal_xpaths, function(x) {
doc <- file %>% XML::xmlInternalTreeParse()
nodeset <- XML::getNodeSet(doc, x)
XML::xmlToDataFrame(nodeset, stringsAsFactors = FALSE) %>%
dplyr::as_data_frame()
})
terminal_xpaths <- terminal_xpathx
df0 <- lapply(terminal_xpaths, function(x) {
doc <- file %>% XML::xmlInternalTreeParse()
nodeset <- XML::getNodeSet(doc, x)
XML::xmlToDataFrame(nodeset, stringsAsFactors = FALSE) %>%
dplyr::as_data_frame()
})
terminal_parent <- doc %>% ## get all xpaths to parents of parent node
xml_get_paths(only_terminal_parent = TRUE)
terminal_xpaths <- terminal_parent %>% ## collapse xpaths to unique only
unlist() %>%
unique()
df0 <- lapply(terminal_xpaths, function(x) {
doc <- file %>% XML::xmlInternalTreeParse()
nodeset <- XML::getNodeSet(doc, x)
XML::xmlToDataFrame(nodeset, stringsAsFactors = FALSE) %>%
dplyr::as_data_frame()
})
library(XML)
teset <- xmlTreeParse("./nextbike-official.xml")
teset <- xmlTreeParse("./nextbike-official.xml", useInternalNodes = TRUE)
teset <- xmlTreeParse("./nextbike-official.xml")
str(teset)
teset$doc
teset$doc$children
library(plyr)
ldply(xmlToList(teset), function(x){data.frame(x)})
teset <- xmlTreeParse("./nextbike-official.xml", useInternalNodes = TRUE)
ldply(xmlToList(teset), function(x){data.frame(x)})
ldply(xmlToList(teset), function(x){matrix(x)})
xmlToList(teset)
ramka <- xmlToDataFrame(teset)
ramka
lista <- xmlToList(teset)
lista <- lista$country
lista
ramka <- xmlToDataFrame(lista)
knitr::opts_chunk$set(echo = TRUE)
library(xml2)
x <- read_xml("<foo> <bar> text <baz/> </bar> </foo>")
x
xml_name(x)
xml_children(x)
xml_text(x)
library(xml2)
y <- read_xml('http://nextbike.net/maps/nextbike-official.xml?city=210&fbclid=IwAR2CWCoe-qO__oFX8y5WwFAqz0TYhd8GGizbDSiFb3rc_6vdVFGBue0yuXc')
y
xml_name(y)
xml_children(y)
xml_text(y)
xml_find_all(y, ".//place")
typeof(xml_find_all(y, ".//place"))
xml_find_all(y, ".//place")[1]
tekst <- xml_find_all(y, ".//place")[1]
tekst
View(tekst)
class(xml_find_all(y, ".//place"))
map(xml_find_all(y, ".//place"), function(x){})
library(tidyverse)
map(xml_find_all(y, ".//place"), function(x){})
stacja <- xml_find_all(y, ".//place")[[1]]
stacja
stacja$node
stacja$doc
stacja[[1]]
typeof(stacja)
library(xml2)
y <- read_xml('http://nextbike.net/maps/nextbike-official.xml?city=210&fbclid=IwAR2CWCoe-qO__oFX8y5WwFAqz0TYhd8GGizbDSiFb3rc_6vdVFGBue0yuXc')
xml_children(y)
y$node
print(y$node)
y
y[1]
y[[1]]
y[1]$node
stacje <- xml_find_all(y, ".//place")
stacje
stacje[1]
stacje[[1]]
stacje[1]
stacje[1]$node
stacje[1][1]
stacje[1][2]
attr(stacje[1])
pierwsza = read_xml(stacje[1])
xml_find_all(stacje[1], ".//bike")
?grep
grep("name", stacje[1])
xml_text(stacje[1])
xml_attr(stacje, "place")
xml_attr(stacje, <place>)
xml_attr(stacje, bike)
xml_attr(stacje, 'bike')
xml_attr(y, "place")
xml_attr(stacje, 'name')
library(xml2)
y <- read_xml('http://nextbike.net/maps/nextbike-official.xml?city=210&fbclid=IwAR2CWCoe-qO__oFX8y5WwFAqz0TYhd8GGizbDSiFb3rc_6vdVFGBue0yuXc')
xml_find_all(y, ".//place")
stacje <- xml_find_all(y, ".//place")
nazwy_stacji <- xml_attr(stacje, "place")
xml_attr(stacje, "place")
xml_attr(stacje, 'name')
nazwy_stacji <- xml_attr(stacje, "name")
View(y)
szerokosci <- xml_attr(stacje, "lat")
dlugosci <- xml_attr(stacje, "lng")
stacje_gps <- data.frame(nazwa = nazwy_stacji, lat=szerokosci, lng=dlugosci)
head(stacje_gps)
head(stacje_gps)
xml_attr(stacje, "bike_types")
liczba_rowerów <- data_frame(nazwa = nazwy_stacji,
miejsca = xml_attr(stacje, "bike_racks"),
wolne = xml_attr(stacje, "free_racks"),
zajete = xml_attr(stacje, "bikes"))
head(liczba_rowerów)
as.integer("16")
liczba_rowerów <- data_frame(nazwa = nazwy_stacji,
miejsca = as.integer(xml_attr(stacje, "bike_racks")),
wolne = as.integer(xml_attr(stacje, "free_racks")),
zajete = as.integer(xml_attr(stacje, "bikes")))
head(liczba_rowerów)
rowery <- xml_find_all(y, ".//bike")
rowery
rowery <- xml_find_all(y, ".//bike")
View(rowery)
z <- xml_find_all(y, ".//bike")
wekt <- xml_attr(z, "numer")
wekt <- xml_attr(z, "number")
z <- xml_find_all(y, ".//bike")
rowery <- data.frame(numer = xml_attr(z, "number"),
typ = as.factor(xml_attr(z, "bike_type")),
aktywny = as.factor(xml_attr(z, "active")),
status = xml_attr(z, "state"))
head(rowery)
stacje_rowery <- data_frame(nazwa = nazwy_stacji,
miejsca = as.integer(xml_attr(stacje, "bike_racks")),
wolne = as.integer(xml_attr(stacje, "free_racks")),
zajete = as.integer(xml_attr(stacje, "bikes")),
rowery = xml_attr(stacje, "bike_numbers"))
stacje_rowery
"24947" in stacje_rowery[1,]
napis <- "26693,25481,29135,96277,29172,97067"
strsplit(napis, ",")
strsplit(napis, ",") %>% typeof()
strsplit(napis, ",") %>% as.vector()
strsplit(napis, ",") %>% as.vector() %>% `[`
strsplit(napis, ",") %>% as.vector() %>% `[`(1)
strsplit(napis, ",") %>% as.vector() %>% `[[`(1)
strsplit(napis, ",") %>% as.vector() %>% `[[`(1) %>% typeof()
"26693" in strsplit(napis, ",") %>% as.vector() %>% `[[`(1) %>% typeof()
grep("26693", strsplit(napis, ",") %>% as.vector() %>% `[[`(1) %>% typeof())
grepl("26693", strsplit(napis, ",") %>% as.vector() %>% `[[`(1) %>% typeof())
grepl("abc", "abcd")
grepl("abc", "abd")
rowery
head(rowery)
rowery$status[rowery$status=="ok"] %>% length()
z <- xml_find_all(y, ".//bike")
rowery <- data.frame(numer = xml_attr(z, "number"),
typ = as.factor(xml_attr(z, "bike_type")),
aktywny = as.factor(xml_attr(z, "active")),
status = xml_attr(z, "state"))
dim(rowery)
rowery$status[rowery$status=="ok"] %>% length()
rowery$status[rowery$status==1] %>% length()
rowery$aktywny[rowery$aktywny==1] %>% length()
rowery$aktywny[rowery$aktywny==1] %>% length()
head(stacje_rowery)
map(stacje_rowery$rowery, grep(numer, x))
map(stacje_rowery$rowery, grep(numer))
map(stacje_rowery$rowery, function(x){grep(numer, x)})
numer <- "24877"
map(stacje_rowery$rowery, function(x){grep(numer, x)})
map(map(stacje_rowery$rowery, function(x){grep(numer, x)}), function(x){x==1})
map(stacje_rowery$rowery, function(x){grep(numer, x)})
lista <- map(stacje_rowery$rowery, function(x){grep(numer, x)})
as.vector(lista)
wektor <- as.vector(lsita)
wektor <- as.vector(lista)
wektor[[1]]
wektor[[wektor==1]]
wektor==1
wektor[wektor==1]
head(stacje_rowery)
?which
which(stacje_rowery$rowery=="26693,25481,29135,96277,29172,97067")
grep("26693", "26693,25481,29135,96277,29172,97067")
grepl("26693", "26693,25481,29135,96277,29172,97067")
which(grepl("26693", "26693,25481,29135,96277,29172,97067"))
which(stacje_rowery$stacje == grepl("26693", "26693,25481,29135,96277,29172,97067"))
which(grepl("26693",stacje_rowery$rowery))
stacje_rowery[which(grepl("26693",stacje_rowery$rowery)),]
stacje_rowery[which(grepl("26693",stacje_rowery$rowery)),]$nazwa
stacje_rowery[which(grepl(numer,stacje_rowery$rowery)),]$nazwa
numer <- "26693"
stacje_rowery[which(grepl(numer,stacje_rowery$rowery)),]$nazwa
numer <- "0000"
stacje_rowery[which(grepl(numer,stacje_rowery$rowery)),]$nazwa
numer <- "0000"
numer <- "29135"
stacje_rowery[which(grepl(numer,stacje_rowery$rowery)),]$nazwa
stacje_gps$lat
szerokosci <- as.double(xml_attr(stacje, "lat"))
dlugosci <- as.double(xml_attr(stacje, "lng"))
stacje_gps <- data.frame(nazwa = nazwy_stacji, lat=szerokosci, lng=dlugosci)
head(stacje_gps)
stacje_gps <- data.frame(nazwa = nazwy_stacji, lat=szerokosci, lng=dlugosci, stringsAsFactors = FALSE)
stacje_gps <- data.frame(nazwa = nazwy_stacji, lat=szerokosci, lng=dlugosci, stringsAsFactors = FALSE)
head(stacje_gps)
stacje_rowery <- data_frame(nazwa = nazwy_stacji,
miejsca = as.integer(xml_attr(stacje, "bike_racks")),
wolne = as.integer(xml_attr(stacje, "free_racks")),
zajete = as.integer(xml_attr(stacje, "bikes")),
rowery = xml_attr(stacje, "bike_numbers")) #znaleźć rower za pomocą grepl
head(stacje_rowery)
